"use strict";(self.webpackChunkcamusdb_docs=self.webpackChunkcamusdb_docs||[]).push([[671],{7876:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var t=s(5893),a=s(1151);const r={sidebar_position:1},o="CamusDB",i={id:"intro",title:"CamusDB",description:"This tutorial provides step-by-step instructions on key CamusDB SQL statements, utilizing an interactive SQL shell linked to a temporary, single-node CamusDB cluster.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar"},l={},d=[{value:"Start CamusDB",id:"start-camusdb",level:2},{value:"Create tables",id:"create-tables",level:2},{value:"Show tables and columns",id:"show-tables-and-columns",level:2},{value:"Insert rows",id:"insert-rows",level:2},{value:"Create indexes",id:"create-indexes",level:2},{value:"Show indexes",id:"show-indexes",level:2},{value:"Query tables",id:"query-tables",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"camusdb",children:"CamusDB"}),"\n",(0,t.jsx)(n.p,{children:"This tutorial provides step-by-step instructions on key CamusDB SQL statements, utilizing an interactive SQL shell linked to a temporary, single-node CamusDB cluster."}),"\n",(0,t.jsx)(n.p,{children:"To view a comprehensive list of all the SQL statements supported and their specifics, please refer to the 'SQL Statements' section."}),"\n",(0,t.jsx)(n.h2,{id:"start-camusdb",children:"Start CamusDB"}),"\n",(0,t.jsx)(n.p,{children:"Before proceeding, ensure that CamusDB is installed on your system."}),"\n",(0,t.jsx)(n.p,{children:'After installation, execute the command "camus test" to proceed.'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",metastring:"shell",children:"$ camusdb test\n"})}),"\n",(0,t.jsx)(n.h2,{id:"create-tables",children:"Create tables"}),"\n",(0,t.jsxs)(n.p,{children:['Suppose you want to offer robot-assisted services, in addition to robot manufacturing. You\'ll need to add a table for the robot operators to the "test" database. To create a table, use the ',(0,t.jsx)(n.strong,{children:"CREATE TABLE"})," command followed by a table name, the column names, and the data type and constraints, if applicable, for each column:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"camus> CREATE TABLE robots (\n  id OID PRIMARY KEY,\n  name STRING NOT NULL, \n  type STRING NOT NULL, \n  year INT64 DEFAULT (2024)\n);\n\nQuery OK, 0 rows affected (00:00:00.0100869)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To display all the columns from a specific table, use the command ",(0,t.jsx)(n.strong,{children:"SHOW COLUMNS FROM table."}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"camus>  show columns from robots\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Field \u2502 Type      \u2502 Null \u2502 Key \u2502 Default \u2502 Extra \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 id    \u2502 Id        \u2502 NO   \u2502 PRI \u2502 NULL    \u2502       \u2502\n\u2502 name  \u2502 String    \u2502 NO   \u2502     \u2502 NULL    \u2502       \u2502\n\u2502 type  \u2502 String    \u2502 NO   \u2502     \u2502 NULL    \u2502       \u2502\n\u2502 year  \u2502 Integer64 \u2502 YES  \u2502     \u2502 2024    \u2502       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n4 rows in set (00:00:00.0285787)\n"})}),"\n",(0,t.jsx)(n.p,{children:"In case it has caught your attention, the data type ID is a special type that represents a unique identifier generated at a specific node and point in time, which has the property of being sortable. If you do not wish to use the OID type for the primary key, UUIDs, STRINGs or INTs can be used instead."}),"\n",(0,t.jsx)(n.h2,{id:"show-tables-and-columns",children:"Show tables and columns"}),"\n",(0,t.jsxs)(n.p,{children:["To view all tables in the currently active database, utilize the ",(0,t.jsx)(n.strong,{children:"SHOW TABLES"})," SQL statement:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"camus> show tables\n"})}),"\n",(0,t.jsx)(n.p,{children:"Following this command, the output displayed on the screen will show the list of tables."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"camus>  show tables\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 tables \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 robots \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n1 rows in set (00:00:00.0046)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"insert-rows",children:"Insert rows"}),"\n",(0,t.jsxs)(n.p,{children:["To add a new row to a table, use the command ",(0,t.jsx)(n.strong,{children:"INSERT INTO"})," followed by the table name, and then list the values for each column in the same order as they appear in the table."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'camus>  insert into robots values (gen_id(), "Automaton", "humanoid machinery", 1940)\nQuery OK, 1 rows affected (00:00:00.0301)\n'})}),"\n",(0,t.jsx)(n.p,{children:"If you want to input column values in an order different from their arrangement in the table, explicitly specify the column names first, followed by their respective values in the corresponding order."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'camus>  insert into robots (id, name, type, year) values (gen_id(), "Automaton", "humanoid machinery", 1940)\nQuery OK, 1 rows affected (00:00:00.0207)\n'})}),"\n",(0,t.jsx)(n.p,{children:"When you omit certain columns from your statement or explicitly opt for default values, the system uses DEFAULT settings. For instance, in the examples below, both statements result in the creation of a row where the 'year' is populated with its default value, which in this scenario is the number 2024:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'camus>  insert into robots values (gen_id(), "Terminator", "killer robot", DEFAULT)\nQuery OK, 1 rows affected (00:00:00.0071)\n\ncamus>  insert into robots (id, name, type) values (gen_id(), "R2-D2", "utility")\nQuery OK, 1 rows affected (00:00:00.0059)\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'camus> select * from robots where name = "Terminator" or name = "R2-D2"\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 id                       \u2502 name       \u2502 type         \u2502 year \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 65b1004b2ac52b3351440895 \u2502 Terminator \u2502 killer robot \u2502 2024 \u2502\n\u2502 65b101e72ac52b335144089a \u2502 R2-D2      \u2502 utility      \u2502 2024 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n2 rows in set (00:00:00.0057802)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"create-indexes",children:"Create indexes"}),"\n",(0,t.jsx)(n.p,{children:"Indexes facilitate the retrieval of data by allowing the system to find information without scanning each row in a table. Tables automatically generate indexes for the primary key and for columns designated as UNIQUE."}),"\n",(0,t.jsx)(n.p,{children:"For columns that aren't unique, you can establish an index by using the CREATE INDEX command, followed optionally by a name for the index, and the ON clause to specify the table and the column(s) you want to index. Additionally, for each column, you have the option to arrange the data in ascending (ASC) or descending (DESC) order."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"camus> CREATE INDEX type_idx ON robots (type DESC)\nQuery OK, 0 rows affected (00:00:00.013)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"show-indexes",children:"Show indexes"}),"\n",(0,t.jsx)(n.p,{children:"To display the indexes of a table, utilize the command SHOW INDEX FROM, followed by the specific table's name:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"camus> show index from robots\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Table  \u2502 Non_unique \u2502 Key_name \u2502 Index_type \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 robots \u2502 0          \u2502 ~pk      \u2502 BTREE      \u2502\n\u2502 robots \u2502 1          \u2502 type_idx \u2502 BTREE      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n2 rows in set (00:00:00.054)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"query-tables",children:"Query tables"}),"\n",(0,t.jsx)(n.p,{children:"To retrieve data from a table, use the SELECT command followed by the columns you want to return, separated by commas, and specify the table from which the data should be extracted."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"camus> select name, type from robots\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 name       \u2502 type         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Terminator \u2502 killer robot \u2502\n\u2502 R2-D2      \u2502 utility      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n2 rows in set (00:00:00.003)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To narrow down the results, incorporate a ",(0,t.jsx)(n.code,{children:"WHERE"})," clause that specifies the columns and the corresponding values you wish to use as filters."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"camus> select * from robots where year = 2024\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 id                       \u2502 name       \u2502 type         \u2502 year \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 65b1004b2ac52b3351440895 \u2502 Terminator \u2502 killer robot \u2502 2024 \u2502\n\u2502 65b101e72ac52b335144089a \u2502 R2-D2      \u2502 utility      \u2502 2024 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n2 rows in set (00:00:00.007)\n"})}),"\n",(0,t.jsx)(n.h1,{id:"update-rows",children:"Update rows"}),"\n",(0,t.jsxs)(n.p,{children:["To modify rows in a table, employ the ",(0,t.jsx)(n.code,{children:"UPDATE"})," command followed by the name of the table, then a SET clause to specify the columns to be updated along with their new values, and finally, a ",(0,t.jsx)(n.code,{children:"WHERE"})," clause to pinpoint the rows that should be updated."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'camus> update robots set year = 1982 where name = "Terminator"\nQuery OK, 1 rows affected (00:00:00.090)\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"camus> select * from robots\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 id                       \u2502 name       \u2502 type         \u2502 year \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 65b1004b2ac52b3351440895 \u2502 Terminator \u2502 killer robot \u2502 1982 \u2502\n\u2502 65b101e72ac52b335144089a \u2502 R2-D2      \u2502 utility      \u2502 2024 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n2 rows in set (00:00:00.003)\n"})}),"\n",(0,t.jsx)(n.p,{children:"In CamusDB, the WHERE clause is mandatory for all updates. This is to avoid massive row updates by mistake."})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);